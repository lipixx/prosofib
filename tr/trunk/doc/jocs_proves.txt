      # ######              #######        #######  #####  
      # #     #                  #  ###### #     # #     # 
      # #     #                 #   #      #     # #       
      # ######     #####       #    #####  #     #  #####  
#     # #                     #     #      #     #       # 
#     # #                    #      #      #     # #     # 
 #####  #                   ####### ###### #######  #####  
 
 
 
El joc de proves que hem fet s'ha d'activar descomentant la linia run2_jp() que
hi ha al main del fitxer user.c.

Llavors s'ha de descomentar la funcionalitat que es vulgui provar:

/*EXCEPCIONS*/

  GENERAL PROTECTION
  Prova l'excepció de protecció general, és la que sortia al codi user.c original.
   
  DIVIDE ERROR
  Intenta dividir per 0 i genera una excepcio de divisio per 0.

  PAGE FAULT
  Accedeix directament a pila movent-hi un valor aleatori i provoca un Page Fault

  
  GENERACIO DE INTERRUPCIONS DES DE CODI D'USUARI
  Acces a una interrupcio de sistema desde usuari (p.ex floating point error)
  Substituir el nombre de interrupcio per provar-ne d'altres
   
  Acces a una int de usuari (p.ex divide error)


/*CRIDES A SISTEMA*/
   Es pot descomentar el perror() del final per veure com queda l'ERRNO.

  Escriu la frase
  write(1,"Prova d'un write",256);
  
  No escriu res
  write(1,"",100);
  
  Bad FD
  write(-10,"Hola",10);
  
  Bad size
  k = write(1,"Hola",-10);

  Imprimeix el num de caracters uqe li posem a baix. Ara esta amb 10, per imprimir-los
  tots s'ha de posar un 683, tambe podem provar p.ex amb 1000, encara que a la M.V.
  avegades falla. Despres diu quants se n'han escrit.
  /* int k = write(1,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n"
	"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n"
	"ccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n"
	"dddddddddddddddDDDDDdddDDDdddDDDdddddddDDDDDddDDDdddDDDdd\n"
	"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n"
	"fffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n"
	"ggggggggggggggggggggggggggggggggggggggggggggggggggggggggg\n"
	"hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\n"
	"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n"
	"jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\n"
	"kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk\n"
	"En aquest bloc de text hi ha 683 caracters",10);
   printf("\n");
   printint(k);
  */

  
  Bad ADDRESS
  write(1,k,200);
  
  Descomentar les funcions per veure com esta errno o per imprimir l'enter k
  perror();
  printint(k);



  PROVA DE LA FUNCIO PRINTF i PRINTI
  	Aquestes funcions no s'havien de fer, i per aixo no assegurem encara
  	el funcionament 100%. Hem detectat algun bug a printint.
    char *text1 = "p";
    int k = printf(text1);
    printf("\nMida bytes escrits: ");
    printint(k);
    
    
    
    					Felip Moll
    					Josep Marti
